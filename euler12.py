# The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

# 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

# Let us list the factors of the first seven triangle numbers:

#  1: 1
#  3: 1,3
#  6: 1,2,3,6
# 10: 1,2,5,10
# 15: 1,3,5,15
# 21: 1,3,7,21
# 28: 1,2,4,7,14,28
# We can see that 28 is the first triangle number to have over five divisors.

# What is the value of the first triangle number to have over five hundred divisors?
import math

def getTriNumFromDivCount(numDivisors):
	n = 1
	tri = getNthTri(n)
	divCount = 0

	while(divCount <= numDivisors):
		divCount = getNumDivisors(tri)
		prev = tri
		n += 1
		tri = getNthTri(n)


	return prev


def getNumDivisors(num):
	divCount = 0
	sqNum = int(math.sqrt(num))

	for i in range(1, sqNum + 1):
		if num % i == 0:
			# account for only 1 if divisor pair has identical nums
			if num/i == i:
				divCount += 1

			# account for divisor pair
			else:
				divCount += 2

	return divCount

def getNthTri(n):
	return n*(n+1)/2


def main():
	print getTriNumFromDivCount(500)

if __name__ == '__main__':
	main()